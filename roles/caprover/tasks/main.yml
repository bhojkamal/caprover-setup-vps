---
- name: Ensure lsof is installed for port checks
  ansible.builtin.package:
    name: lsof
    state: present
  tags: [caprover_prerequisites]

- name: Get all containers info
  community.docker.docker_host_info:
    containers: yes
  register: docker_containers
  tags: [caprover_prerequisites]

- name: Show containers using 80 or 443
  debug:
    msg: "Container {{ item.Names[0] }} ({{ item.Id }}) is using ports: {{ item.Ports }}"
  loop: "{{ docker_containers.containers }}"
  when:
    - item.State.Running is defined and item.State.Running == true
    - item.Ports is defined
    - item.Ports | selectattr('PublicPort', 'defined') | selectattr('PublicPort', 'in', [80, 443]) | list | length > 0
  tags: [caprover_prerequisites]

- name: Stop and remove containers using port 80 or 443
  community.docker.docker_container:
    name: "{{ item.Id }}"
    state: absent # Change to absent to ensure removal
    force_kill: true # Force kill if it doesn't stop gracefully
  loop: "{{ docker_containers.containers }}"
  when:
    - item.State.Running is defined and item.State.Running == true
    - item.Ports is defined
    - item.Ports | selectattr('PublicPort', 'defined') | selectattr('PublicPort', 'in', [80, 443]) | list | length > 0
  tags: [caprover_prerequisites]

- name: Clean up dangling Docker resources (networks, volumes)
  ansible.builtin.shell: |
    docker system prune --force --volumes
  register: docker_prune_result
  changed_when: "'Total reclaimed space' in docker_prune_result.stdout"
  tags: [caprover_prerequisites]

- name: Display Docker prune results
  debug:
    msg: "{{ docker_prune_result.stdout_lines }}"
  when: docker_prune_result.stdout != ""
  tags: [caprover_prerequisites]

- name: Restart Docker service to ensure ports are released
  ansible.builtin.systemd:
    name: docker
    state: restarted
    daemon_reload: true
  tags: [caprover_prerequisites]

- name: Wait for 10 seconds after Docker restart for daemon to stabilize
  ansible.builtin.pause:
    seconds: 10
  tags: [caprover_prerequisites]

- name: Check for non-Docker processes using port 80 or 443
  ansible.builtin.shell: |
    lsof -i :80 || lsof -i :443
  register: port_check_result
  failed_when: false
  changed_when: false
  tags: [caprover_prerequisites]

- name: Display processes using port 80 or 443 (if any)
  debug:
    msg: "WARNING: The following processes are using ports 80 or 443: {{ port_check_result.stdout }}"
  when: port_check_result.stdout != ""
  tags: [caprover_prerequisites]

- name: Fail if ports 80 or 443 are still in use by non-Docker processes
  ansible.builtin.fail:
    msg: "Ports 80 or 443 are still allocated by non-Docker processes. Please stop them manually before deploying CapRover. Details: {{ port_check_result.stdout }}"
  when: port_check_result.stdout != "" and port_check_result.rc == 0
  tags: [caprover_prerequisites]

- name: Ensure /captain directory exists
  ansible.builtin.file:
    path: /captain
    state: directory
    mode: '0755'
    owner: root
    group: root
  tags:
    - caprover_prerequisites

- name: Open firewall ports
  ansible.builtin.include_tasks: firewall.yml
  tags:
    - caprover_prerequisites
    - firewall

- name: Deploy CapRover container
  community.docker.docker_container:
    name: captain-root
    image: caprover/caprover:latest
    restart_policy: always
    ports:
      - "80:80"
      - "443:443"
      - "3000:3000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /captain:/captain
    env:
      ACCEPTED_TERMS: "true"
      MAIN_NODE_IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
      # You can pre-set login password if needed
      # DEFAULT_PASSWORD: "{{ caprover_default_password | default('captain42') }}"
    state: started
    labels:
      com.caprover.app.name: captain-root
    networks:
      - name: bridge
    cpu_shares: 512
    memory: "512m"
    log_driver: json-file
    log_opt:
      max-size: "10m"
      max-file: "3"
    recreate: yes
  tags:
    - caprover_install
    - caprover_service
    - caprover_prerequisites
