---
- name: Ensure lsof is installed
  ansible.builtin.package:
    name: lsof
    state: present
  tags: [caprover_prerequisites]

- name: Ensure /captain directory exists
  ansible.builtin.file:
    path: /captain
    state: directory
    mode: "0755"
    owner: root
    group: root
  tags: [caprover_prerequisites]

- name: Open firewall ports
  ansible.builtin.include_tasks: firewall.yml
  tags: [caprover_prerequisites, firewall]

# Quick idempotency check
- name: Check if CapRover is already working
  uri:
    url: "http://{{ ansible_default_ipv4.address }}:3000"
    method: GET
    status_code: [200, 302, 404]
    timeout: 5
  register: caprover_check
  failed_when: false
  tags: [caprover_check]

- name: Skip deployment - CapRover already working
  debug:
    msg: "âœ… CapRover already working at http://{{ ansible_default_ipv4.address }}:3000"
  when: caprover_check.status is defined and caprover_check.status in [200, 302, 404]

# Deploy only if CapRover not working
- block:
    - name: Stop Docker service
      ansible.builtin.systemd:
        name: docker
        state: stopped

    - name: Kill processes on CapRover ports
      ansible.builtin.shell: |
        for port in 80 443 3000; do
          fuser -k $port/tcp 2>/dev/null || true
        done

    - name: Clean Docker networking
      ansible.builtin.shell: |
        iptables -t nat -F DOCKER 2>/dev/null || true
        iptables -t filter -F DOCKER 2>/dev/null || true
        ip link delete docker0 2>/dev/null || true

    - name: Start Docker service
      ansible.builtin.systemd:
        name: docker
        state: started

    - name: Wait for Docker to stabilize
      ansible.builtin.pause:
        seconds: 10

    - name: Deploy CapRover container
      community.docker.docker_container:
        name: captain-root
        image: caprover/caprover:latest
        restart_policy: always
        ports:
          - "80:80"
          - "443:443"
          - "3000:3000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /captain:/captain
        env:
          ACCEPTED_TERMS: "true"
          MAIN_NODE_IP_ADDRESS: "{{ ansible_default_ipv4.address }}"
        state: started
        labels:
          com.caprover.app.name: captain-root
      register: caprover_deployment

    - name: Wait for CapRover to be ready
      uri:
        url: "http://{{ ansible_default_ipv4.address }}:3000"
        method: GET
        status_code: [200, 302, 404]
      register: caprover_ready
      until: caprover_ready.status in [200, 302, 404]
      retries: 30
      delay: 5

  when: not (caprover_check.status is defined and caprover_check.status in [200, 302, 404])
  tags: [caprover_deploy]

- name: Display CapRover access info
  debug:
    msg:
      - "ðŸŽ‰ CapRover is ready!"
      - "Web Interface: http://{{ ansible_default_ipv4.address }}:3000"
      - "HTTP: http://{{ ansible_default_ipv4.address }}"
      - "HTTPS: https://{{ ansible_default_ipv4.address }}"
